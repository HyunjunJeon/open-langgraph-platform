services:
  # PostgreSQL database for LangGraph and metadata
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: open_langgraph
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d open_langgraph"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Open LangGraph Server
  open-langgraph:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres:5432/open_langgraph
      - AUTH_TYPE=noop
      - DEBUG=true
      - PORT=${PORT:-8000}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./open_langgraph.json:/app/open_langgraph.json:ro
      - ./graphs:/app/graphs:ro
      - ./src:/app/src:ro # for hot reload support of server
      - ./auth.py:/app/auth.py:ro
      - ./.env:/app/.env:ro
      - ./alembic:/app/alembic:ro # for migrations
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Starting Open LangGraph server...' &&
        uvicorn src.agent_server.main:app --host 0.0.0.0 --port $${PORT:-8000} --reload
      "

  # Redis (optional - for advanced queuing in future phases)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    profiles:
      - redis

volumes:
  postgres_data:
  redis_data:
